{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport 'react-native-gesture-handler';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Chats from \"./Screens/Chats\";\nimport Updates from \"./Screens/Updates\";\nimport { DrawerActions } from '@react-navigation/native';\nimport Calls from \"./Screens/Calls\";\nimport { Ionicons } from '@expo/vector-icons';\nimport DrawerOption from \"./Screens/DrawerOption\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar Top = createMaterialTopTabNavigator();\nvar Stack = createStackNavigator();\nfunction TopOverView() {\n  return _jsxs(Top.Navigator, {\n    children: [_jsx(Top.Screen, {\n      name: \"Chats\",\n      component: Chats\n    }), _jsx(Top.Screen, {\n      name: \"Updates\",\n      component: Updates\n    }), _jsx(Top.Screen, {\n      name: \"Calls\",\n      component: Calls\n    })]\n  });\n}\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModelEnable = _useState2[0],\n    setModel = _useState2[1];\n  return _jsxs(_Fragment, {\n    children: [_jsx(Modal, {\n      visible: isModelEnable,\n      animationType: \"slide\",\n      style: {\n        flex: 0.3,\n        width: 50,\n        height: 50,\n        backgroundColor: \"orange\"\n      },\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          children: \"hiiii\"\n        })\n      })\n    }), _jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        id: \"LeftDrawer\",\n        screenOptions: function screenOptions(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            headerRight: function headerRight() {\n              return _jsxs(View, {\n                style: styles.rightIcons,\n                children: [_jsx(Ionicons, {\n                  style: {\n                    marginRight: 16\n                  },\n                  name: \"camera\",\n                  size: 25\n                }), _jsx(Ionicons, {\n                  style: {\n                    marginRight: 16\n                  },\n                  name: \"search\",\n                  size: 25\n                }), _jsx(Ionicons, {\n                  style: {\n                    marginRight: 16\n                  },\n                  name: \"menu-outline\",\n                  onPress: function onPress() {\n                    return setModel(true);\n                  },\n                  size: 25\n                })]\n              });\n            }\n          };\n        },\n        children: _jsx(Stack.Screen, {\n          name: \"WhatsApp\",\n          component: TopOverView\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  rightIcons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Modal","NavigationContainer","createMaterialTopTabNavigator","createStackNavigator","createDrawerNavigator","Dimensions","Chats","Updates","DrawerActions","Calls","Ionicons","DrawerOption","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Drawer","Top","Stack","TopOverView","Navigator","children","Screen","name","component","App","_useState","_useState2","_slicedToArray","isModelEnable","setModel","visible","animationType","style","flex","width","height","backgroundColor","id","screenOptions","_ref","navigation","headerRight","styles","rightIcons","marginRight","size","onPress","create","container","alignItems","justifyContent","flexDirection"],"sources":["C:/Users/narapell/ReactProjects/WhatsAppClone/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View ,Modal} from 'react-native';\nimport{NavigationContainer} from '@react-navigation/native';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport 'react-native-gesture-handler';\nimport {Dimensions} from 'react-native';\nimport Chats from './Screens/Chats';\nimport Updates from './Screens/Updates';\nimport { DrawerActions } from '@react-navigation/native';\nimport Calls from './Screens/Calls';\nimport {Ionicons} from '@expo/vector-icons';\nimport DrawerOption from './Screens/DrawerOption';\n\nimport { useState } from 'react';\nconst Drawer=createDrawerNavigator();\nconst Top=createMaterialTopTabNavigator();\nconst Stack=createStackNavigator();\n\nfunction TopOverView(){\n  return(\n       <Top.Navigator>\n             <Top.Screen name='Chats'  component={Chats}></Top.Screen>\n             <Top.Screen name='Updates' component={Updates}></Top.Screen>\n             <Top.Screen name='Calls' component={Calls}></Top.Screen>\n        </Top.Navigator>\n  )\n}\n\n// function DrawerOverview(){\n//   return(\n//     <Drawer.Navigator  screenOptions={{ drawerPosition: 'right', headerShown: false,drawerStyle: {\n//       width: Dimensions.get('window').width / 1.25,\n//       backgroundColor:\"orange\"\n//     } }}>\n//         <Drawer.Screen name='drawer'   component={DrawerOption}></Drawer.Screen>\n//     </Drawer.Navigator>\n    \n//   )\n// }\n\n\n\n\n\n\nexport default function App() {\n  \n  const [isModelEnable,setModel]=useState(false);\n  return (\n    <>\n    <Modal visible={isModelEnable} animationType=\"slide\" style={{flex:0.3,width:50,height:50,backgroundColor:\"orange\"}} >\n      <View>\n        <Text>hiiii</Text>\n      </View>\n    </Modal>\n    <NavigationContainer>\n         <Stack.Navigator id=\"LeftDrawer\" screenOptions={({navigation})=>({\n          \n          headerRight:()=>\n          <View style={styles.rightIcons}> \n                       \n             <Ionicons style={{marginRight:16}} name=\"camera\" size={25} />\n             <Ionicons style={{marginRight:16}} name=\"search\" size={25}/>\n             <Ionicons style={{marginRight:16}} name=\"menu-outline\" onPress={()=>setModel(true)} size={25}/> \n           </View> \n        \n         })}>\n    \n             <Stack.Screen name='WhatsApp' component={TopOverView}></Stack.Screen>\n             {/* <Stack.Screen name='DrawerOverview' options={{headerShown:false}} component={DrawerOverview}></Stack.Screen> */}\n             \n         </Stack.Navigator>\n    </NavigationContainer>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  rightIcons:{\n   flexDirection:\"row\",\n   justifyContent:\"space-around\",\n\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}