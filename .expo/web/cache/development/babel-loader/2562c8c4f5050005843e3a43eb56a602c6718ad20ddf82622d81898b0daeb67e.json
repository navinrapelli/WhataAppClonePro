{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport 'react-native-gesture-handler';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Chats from \"./Screens/Chats\";\nimport Updates from \"./Screens/Updates\";\nimport { DrawerActions } from '@react-navigation/native';\nimport Calls from \"./Screens/Calls\";\nimport { Ionicons } from '@expo/vector-icons';\nimport DrawerOption from \"./Screens/DrawerOption\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nvar Top = createMaterialTopTabNavigator();\nvar Stack = createStackNavigator();\nfunction TopOverView() {\n  return _jsxs(Top.Navigator, {\n    children: [_jsx(Top.Screen, {\n      name: \"Chats\",\n      component: Chats\n    }), _jsx(Top.Screen, {\n      name: \"Updates\",\n      component: Updates\n    }), _jsx(Top.Screen, {\n      name: \"Calls\",\n      component: Calls\n    })]\n  });\n}\nvar SyncIconFunc = {\n  drawerLabel: function drawerLabel(config) {\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        children: \"Sync Data\"\n      }), _jsx(Ionicons, {\n        onPress: function onPress() {\n          return alert(\"bell pressed\");\n        },\n        style: {\n          position: 'absolute',\n          right: 10\n        },\n        size: 24,\n        name: \"settings\"\n      })]\n    });\n  }\n};\nfunction DrawerOverview() {\n  return _jsx(Drawer.Navigator, {\n    screenOptions: {\n      drawerPosition: 'left',\n      drawerType: \"back\",\n      drawerStyle: {\n        width: \"80%\",\n        backgroundColor: \"orange\"\n      }\n    },\n    children: _jsx(Drawer.Screen, {\n      name: \"drawer\",\n      options: SyncIconFunc,\n      component: DrawerOption\n    })\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      id: \"LeftDrawer\",\n      screenOptions: function screenOptions(_ref) {\n        var navigation = _ref.navigation;\n        return {\n          headerRight: function headerRight() {\n            return _jsxs(View, {\n              style: styles.rightIcons,\n              children: [_jsx(Ionicons, {\n                style: {\n                  marginRight: 16\n                },\n                name: \"camera\",\n                size: 25\n              }), _jsx(Ionicons, {\n                style: {\n                  marginRight: 16\n                },\n                name: \"search\",\n                size: 25\n              })]\n            });\n          }\n        };\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"DrawerOverview\",\n        options: {\n          headerShown: false\n        },\n        component: DrawerOverview\n      }), _jsx(Stack.Screen, {\n        name: \"WhatsApp\",\n        component: TopOverView\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  rightIcons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","NavigationContainer","createMaterialTopTabNavigator","createStackNavigator","createDrawerNavigator","Dimensions","Chats","Updates","DrawerActions","Calls","Ionicons","DrawerOption","jsx","_jsx","jsxs","_jsxs","Drawer","Top","Stack","TopOverView","Navigator","children","Screen","name","component","SyncIconFunc","drawerLabel","config","style","flexDirection","onPress","alert","position","right","size","DrawerOverview","screenOptions","drawerPosition","drawerType","drawerStyle","width","backgroundColor","options","App","id","_ref","navigation","headerRight","styles","rightIcons","marginRight","headerShown","create","container","flex","alignItems","justifyContent"],"sources":["C:/Users/narapell/ReactProjects/WhatsAppClone/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport{NavigationContainer} from '@react-navigation/native';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport 'react-native-gesture-handler';\nimport {Dimensions} from 'react-native';\nimport Chats from './Screens/Chats';\nimport Updates from './Screens/Updates';\nimport { DrawerActions } from '@react-navigation/native';\nimport Calls from './Screens/Calls';\nimport {Ionicons} from '@expo/vector-icons';\nimport DrawerOption from './Screens/DrawerOption';\n\nconst Drawer=createDrawerNavigator();\nconst Top=createMaterialTopTabNavigator();\nconst Stack=createStackNavigator();\n\nfunction TopOverView(){\n  return(\n       <Top.Navigator>\n             <Top.Screen name='Chats'  component={Chats}></Top.Screen>\n             <Top.Screen name='Updates' component={Updates}></Top.Screen>\n             <Top.Screen name='Calls' component={Calls}></Top.Screen>\n        </Top.Navigator>\n  )\n}\n\nconst SyncIconFunc = {\n  drawerLabel: config=>\n  <View style={{flexDirection:'row'}}>\n  <Text >\n    Sync Data\n  </Text>\n  <Ionicons\n          onPress={() => alert(\"bell pressed\")}\n          style={{ position:'absolute',right: 10}}\n          size={24}\n          name=\"settings\"\n        />\n  </View>\n  };\nfunction DrawerOverview(){\n  return(\n    <Drawer.Navigator  screenOptions={{ drawerPosition: 'left',\n    drawerType:\"back\",\n     drawerStyle: {\n      width:\"80%\",\n      backgroundColor:\"orange\",\n      \n    } }}>\n        <Drawer.Screen name='drawer' options={SyncIconFunc}  component={DrawerOption}></Drawer.Screen>\n    </Drawer.Navigator>\n    \n  )\n}\n\n\n\n\n\n\nexport default function App() {\n  \n  return (\n    <NavigationContainer>\n         <Stack.Navigator id=\"LeftDrawer\" screenOptions={({navigation})=>({\n          \n          headerRight:()=>\n          <View style={styles.rightIcons}> \n                       \n             <Ionicons style={{marginRight:16}} name=\"camera\" size={25} />\n             <Ionicons style={{marginRight:16}} name=\"search\" size={25}/>\n             {/* <Ionicons style={{marginRight:16}} name=\"menu-outline\" onPress={()=>navigation.navigate(\"DrawerOverview\")} size={25}/>  */}\n           </View> \n        \n         })}>\n                 <Stack.Screen name='DrawerOverview' options={{headerShown:false}} component={DrawerOverview}></Stack.Screen>\n\n             <Stack.Screen name='WhatsApp' component={TopOverView}></Stack.Screen>\n             \n         </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  rightIcons:{\n   flexDirection:\"row\",\n   justifyContent:\"space-around\",\n\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}