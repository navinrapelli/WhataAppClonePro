{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ChatComp from \"../Components/ChatComp\";\nimport { useEffect, useState } from \"react\";\nimport { GetData } from \"../HttpsReq/HttpData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction ChatOut(_ref) {\n  var isSearch = _ref.isSearch;\n  var nn;\n  console.log(isSearch);\n  if (isSearch) {\n    nn = isSearch;\n  } else {\n    nn = false;\n  }\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputData = _useState2[0],\n    setInputData = _useState2[1];\n  useEffect(function () {\n    function ggg() {\n      return _ggg.apply(this, arguments);\n    }\n    function _ggg() {\n      _ggg = _asyncToGenerator(function* () {\n        var hh = yield GetData();\n        console.log(hh);\n        setInputData(hh);\n      });\n      return _ggg.apply(this, arguments);\n    }\n    ggg();\n  }, []);\n  function ourData(itemData) {\n    if (itemData.item.id.name && itemData.item.id.name != \"null\") {\n      return _jsx(ChatComp, {\n        name: itemData.item.id.name,\n        imgUri: itemData.item.picture.medium\n      });\n    }\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(Modal, {\n      visible: nn,\n      transparent: true,\n      children: _jsx(View, {\n        style: ChatOutStyle.mainModal,\n        children: _jsxs(View, {\n          style: ChatOutStyle.innerContinder,\n          children: [_jsx(Text, {\n            style: ChatOutStyle.searchText,\n            children: \"Search\"\n          }), _jsx(TextInput, {\n            style: ChatOutStyle.searchTextInput\n          })]\n        })\n      })\n    }), _jsx(FlatList, {\n      data: inputData,\n      renderItem: ourData,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.value;\n      }\n    })]\n  });\n}\nexport default ChatOut;\nvar ChatOutStyle = StyleSheet.create({\n  mainModal: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start'\n  },\n  innerContinder: {\n    width: 380,\n    height: 120,\n    backgroundColor: \"white\",\n    alignItems: \"center\"\n  },\n  searchText: {\n    fontWeight: \"bold\",\n    alignContent: \"center\"\n  },\n  searchTextInput: {\n    paddingVertical: 10,\n    paddingHorizontal: 100,\n    backgroundColor: \"orange\"\n  }\n});","map":{"version":3,"names":["ChatComp","useEffect","useState","GetData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatOut","_ref","isSearch","nn","console","log","_useState","_useState2","_slicedToArray","inputData","setInputData","ggg","_ggg","apply","arguments","_asyncToGenerator","hh","ourData","itemData","item","id","name","imgUri","picture","medium","children","Modal","visible","transparent","View","style","ChatOutStyle","mainModal","innerContinder","Text","searchText","TextInput","searchTextInput","FlatList","data","renderItem","keyExtractor","value","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","width","height","backgroundColor","fontWeight","alignContent","paddingVertical","paddingHorizontal"],"sources":["C:/Users/narapell/ReactProjects/WhatsAppClone/Components/ChatOut.js"],"sourcesContent":["import { Text,View,FlatList,Modal,TextInput,StyleSheet } from \"react-native\";\r\nimport ChatComp from \"../Components/ChatComp\";\r\nimport { useEffect ,useState} from \"react\";\r\nimport { GetData } from \"../HttpsReq/HttpData\";\r\nfunction ChatOut({isSearch}){\r\n\r\n    let nn;\r\n     console.log(isSearch);\r\n    if(isSearch){\r\n      nn=isSearch;\r\n    }else{\r\n        nn=false;\r\n    }\r\n\r\n    const [inputData,setInputData]=useState([]);\r\n\r\n\r\n   useEffect(()=>{\r\n        async function ggg(){\r\n         const hh=await GetData();\r\n         console.log(hh);\r\n         setInputData(hh)\r\n        }\r\n\r\n        ggg();\r\n      \r\n   },[])\r\n\r\n    function ourData(itemData){\r\n        if(itemData.item.id.name && itemData.item.id.name!=\"null\")\r\n        {\r\n           return <ChatComp name={itemData.item.id.name} imgUri={itemData.item.picture.medium}/>\r\n        }\r\n        \r\n     }\r\n    return(\r\n        <>\r\n         <Modal visible={nn} transparent={true}>\r\n            <View style={ChatOutStyle.mainModal}>\r\n                <View style={ChatOutStyle.innerContinder}> \r\n                    <Text style={ChatOutStyle.searchText}>Search</Text>\r\n                    <TextInput style={ChatOutStyle.searchTextInput}/>\r\n                </View>\r\n            </View>\r\n        </Modal> \r\n        <FlatList data={inputData} renderItem={ourData} keyExtractor={(item)=>item.id.value} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatOut;\r\n\r\nconst ChatOutStyle=StyleSheet.create({\r\n    mainModal:{\r\n        flex: 1,\r\n          flexDirection: 'column',\r\n          justifyContent: 'flex-start',\r\n          alignItems: 'flex-start',\r\n    },\r\n    innerContinder:{\r\n        width: 380,\r\n        height: 120,\r\n        backgroundColor:\"white\",\r\n        alignItems:\"center\"\r\n    },\r\n    searchText:{\r\n        fontWeight:\"bold\",\r\n        alignContent:\"center\"\r\n        \r\n    },\r\n    searchTextInput:{\r\n        paddingVertical:10,\r\n        paddingHorizontal:100,\r\n        backgroundColor:\"orange\"\r\n    }\r\n\r\n\r\n})\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}