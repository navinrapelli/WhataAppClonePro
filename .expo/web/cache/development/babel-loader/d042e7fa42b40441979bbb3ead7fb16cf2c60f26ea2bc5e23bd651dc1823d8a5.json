{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useState } from \"react\";\nimport { State } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ModalsCom(props) {\n  console.log(props.isVisible);\n  var _useState = useState(props.defualtvalue ? props.defualtvalue : \"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    inpuText = _useState2[0],\n    setInputText = _useState2[1];\n  function textHandler(enterText) {\n    setInputText(enterText);\n  }\n  function submithandler() {\n    props.getValue(inpuText);\n  }\n  console.log(inpuText);\n  return _jsx(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: props.isVisible,\n    children: _jsx(View, {\n      style: ModalStyle.main,\n      children: _jsxs(View, {\n        style: ModalStyle.innerContinder,\n        children: [_jsx(View, {\n          style: ModalStyle.title,\n          children: _jsx(Text, {\n            children: props.title\n          })\n        }), _jsxs(View, {\n          style: ModalStyle.content,\n          children: [props.input && _jsx(TextInput, {\n            style: ModalStyle.input,\n            onChangeText: textHandler,\n            value: inpuText\n          }), _jsx(Text, {\n            children: props.content\n          })]\n        }), _jsxs(View, {\n          style: ModalStyle.buttons,\n          children: [_jsx(Button, {\n            title: props.buttonContent,\n            color: \"#ADD8E6\",\n            onPress: submithandler\n          }), _jsx(Button, {\n            title: \"cancel\",\n            color: \"#ADD8E6\",\n            onPress: props.dismiss\n          })]\n        })]\n      })\n    })\n  });\n}\nexport default ModalsCom;\nvar ModalStyle = StyleSheet.create({\n  main: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  innerContinder: {\n    padding: 10,\n    width: 300,\n    height: 300,\n    backgroundColor: \"white\",\n    borderRadius: 20\n  },\n  title: {\n    backgroundColor: \"#ADD8E6\",\n    padding: 20,\n    alignItems: \"center\",\n    borderRadius: 20\n  },\n  buttons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  content: {\n    flex: 1\n  },\n  input: {\n    marginVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ADD8E6\",\n    padding: 10\n  }\n});","map":{"version":3,"names":["useNavigation","useState","State","jsx","_jsx","jsxs","_jsxs","ModalsCom","props","console","log","isVisible","_useState","defualtvalue","_useState2","_slicedToArray","inpuText","setInputText","textHandler","enterText","submithandler","getValue","Modal","animationType","transparent","visible","children","View","style","ModalStyle","main","innerContinder","title","Text","content","input","TextInput","onChangeText","value","buttons","Button","buttonContent","color","onPress","dismiss","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","padding","width","height","backgroundColor","borderRadius","marginVertical","borderBottomWidth","borderBottomColor"],"sources":["C:/Users/narapell/ReactProjects/WhatsAppClone/Components/ModalsCom.js"],"sourcesContent":["import { View,Modal ,Text,TextInput,Button,StyleSheet,Pressable} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useState } from \"react\";\r\nimport { State } from \"react-native-gesture-handler\";\r\n\r\nfunction ModalsCom(props){\r\n    console.log(props.isVisible);\r\n    const [inpuText,setInputText]=useState(props.defualtvalue?props.defualtvalue:\"\");\r\n\r\n    function textHandler(enterText){\r\n        setInputText(enterText)\r\n    }\r\n    \r\n\r\n    function submithandler(){\r\n        props.getValue(inpuText);\r\n    }\r\n    console.log(inpuText);\r\n    return(\r\n\r\n    <Modal animationType=\"slide\" transparent={true}\r\n       visible={props.isVisible}  >\r\n\r\n       <View style={ModalStyle.main}>\r\n           <View style={ModalStyle.innerContinder}>\r\n                <View style={ModalStyle.title}>\r\n                  <Text>{props.title}</Text>\r\n                </View>\r\n                <View style={ModalStyle.content}>\r\n                    {props.input &&(\r\n                        <TextInput style={ModalStyle.input} onChangeText={textHandler} value={inpuText}/>\r\n                    )}\r\n                    <Text>{props.content}</Text>\r\n                    \r\n                </View>\r\n                <View style={ModalStyle.buttons}>\r\n                    <Button title={props.buttonContent} color=\"#ADD8E6\" onPress={submithandler}/>\r\n                    <Button title=\"cancel\" color=\"#ADD8E6\" onPress={props.dismiss}/>\r\n                </View>\r\n           </View>\r\n       </View>\r\n</Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default ModalsCom;\r\n\r\nconst ModalStyle=StyleSheet.create({\r\n    main:{\r\n        flex: 1,\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n    },\r\n    innerContinder:{\r\n        padding:10,\r\n        width: 300,\r\n        height: 300,\r\n        backgroundColor:\"white\",\r\n        borderRadius:20\r\n    },\r\n    title:{\r\n        backgroundColor:\"#ADD8E6\",\r\n        padding:20,\r\n        alignItems:\"center\",\r\n        borderRadius:20\r\n    },\r\n    buttons:{\r\n        flexDirection:\"row\",\r\n        justifyContent:\"space-between\"\r\n    },\r\n    content:{\r\n        flex:1\r\n    },\r\n    input:{\r\n        marginVertical:10,\r\n        borderBottomWidth:1,\r\n        borderBottomColor:\"#ADD8E6\",\r\n        padding:10\r\n\r\n    }\r\n})\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}